import { useEffect, useState } from "react";


export default function FullViewDescription({ content = '',  onClick}) {
    const [html, setHtml] = useState('');
    const replaceSize = 300;

    useEffect(() => {
        const regexps = [/(<p\b[^>]*>)(.*?)(<\/p>)/gis, /(<ul\b[^>]*>)(.*?)(<\/ul>)/gis]

        const style = `display: inline-block; 
                      border: 2px solid rgba(78, 207, 224, 0.3); 
                      padding: 10px;
                      border-radius: 8px;
                      position: relative;
                      margin-bottom: 10px;
                      background-color: rgba(78, 207, 224, 0.3);
                      `;        
        
        let html = content;

        regexps.forEach(regexp => {
            
            html = html.replace(regexp, (match) => {
                if (match.length > replaceSize) {
                    return `<span  style="${style}">
                                <span style="position: absolute; top: -20px; left: -0px; cursor: pointer">
                                    <svg onClick="handleClickDescription(event)" width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <g filter="url(#filter0_bi_301_5888)">
                                        <path d="M31.5264 15.5264C31.5264 6.95139 24.575 0 16 0V0C7.42502 0 0.473633 6.95139 0.473633 15.5264V15.5264C0.473633 24.1013 7.42502 31.0527 16 31.0527H28.0761C29.9816 31.0527 31.5264 29.508 31.5264 27.6024V15.5264Z" fill="#297FFF"/>
                                        <path d="M16 30.5527H28.0761C29.7055 30.5527 31.0264 29.2318 31.0264 27.6024V15.5264C31.0264 7.22753 24.2988 0.5 16 0.5C7.70117 0.5 0.973633 7.22753 0.973633 15.5264C0.973633 23.8252 7.70117 30.5527 16 30.5527Z" stroke="white"/>
                                        </g>
                                        <path d="M21.2195 20.137C21.8397 19.5279 22.3478 18.8081 22.7108 18.0108C23.1155 17.1211 23.3408 16.1351 23.3408 15.0988C23.3408 13.1386 22.5382 11.3639 21.2405 10.0795C19.9428 8.79461 18.1502 8 16.1701 8V8.00162C14.189 8.00162 12.3966 8.79569 11.0998 10.0793C9.80292 11.3628 9.00109 13.1376 9.00136 15.0988H9C9 16.1356 9.225 17.1214 9.63001 18.011C10.0495 18.9331 10.6631 19.7509 11.4197 20.414C11.5784 20.5531 11.8209 20.5382 11.9616 20.3811C12.0279 20.3071 12.0592 20.2145 12.0579 20.123V16.2992H13.058C13.5415 16.2992 13.9809 16.1038 14.2992 15.7884C14.3071 15.7806 14.3145 15.7727 14.3216 15.7644C14.6267 15.4509 14.8152 15.0259 14.8152 14.5591V13.4359H19.2946V13.4375H19.2948C19.5656 13.4375 19.8125 13.5477 19.9914 13.7245C20.1711 13.9027 20.2829 14.1468 20.2829 14.4141H20.2813V20.1289C20.2813 20.2356 20.3258 20.332 20.3969 20.4013L23.3422 23.3168C23.4927 23.4658 23.7365 23.4658 23.8871 23.3168C24.0376 23.168 24.0376 22.9264 23.8871 22.7773L21.2195 20.1367V20.137ZM22.0093 17.6978C21.7611 18.2435 21.4377 18.7476 21.052 19.1977V14.4144H21.0507C21.0507 13.9346 20.8538 13.4999 20.5363 13.1856C20.218 12.8705 19.7784 12.6748 19.2948 12.6748H19.2946V12.6764H14.4642C14.453 12.6753 14.4416 12.6748 14.4298 12.6748C14.3101 12.6748 14.2032 12.7288 14.1325 12.8136L11.4148 15.6359C11.3373 15.7055 11.2888 15.806 11.2888 15.9177C11.2888 15.9291 11.2893 15.9404 11.2904 15.9515V19.1996C10.9042 18.7492 10.5799 18.2443 10.3315 17.6978C9.9712 16.9059 9.77074 16.026 9.77074 15.0986H9.76911C9.76911 13.3498 10.4861 11.766 11.645 10.6185C12.8038 9.47123 14.4042 8.7614 16.1704 8.7614V8.76302C17.938 8.76302 19.5378 9.47231 20.6958 10.6187C21.8539 11.7654 22.5703 13.3492 22.5703 15.0988C22.5703 16.0263 22.3699 16.9062 22.0093 17.6981V17.6978ZM12.5725 15.5365L14.0445 14.0078V14.5594C14.0445 14.8199 13.9405 15.0575 13.7715 15.233C13.7655 15.2384 13.7597 15.2435 13.7543 15.2492C13.5751 15.4266 13.3288 15.5365 13.058 15.5365H12.5725ZM13.8034 20.9886C13.6062 20.9114 13.3831 21.0067 13.3051 21.2016C13.2268 21.3968 13.3234 21.6177 13.5203 21.6949C13.9381 21.8596 14.3723 21.9862 14.8185 22.0705C15.2589 22.1536 15.7108 22.1974 16.1704 22.1974C16.63 22.1974 17.0802 22.1539 17.5204 22.0705C17.9685 21.986 18.4033 21.8593 18.8205 21.6952C19.0175 21.6177 19.1137 21.3968 19.0357 21.2019C18.9575 21.007 18.7344 20.9114 18.5374 20.9889C18.1684 21.1341 17.7812 21.2467 17.3789 21.3229C16.9905 21.396 16.5866 21.4346 16.1707 21.4346C15.7548 21.4346 15.3517 21.396 14.9633 21.3229C14.5594 21.2464 14.1715 21.1339 13.8036 20.9889L13.8034 20.9886ZM18.9855 18.2063C19.1983 18.2063 19.3706 18.0353 19.3706 17.8247C19.3706 17.6141 19.198 17.4432 18.9855 17.4432H14.0139C13.8012 17.4432 13.6285 17.6141 13.6285 17.8247C13.6285 18.0353 13.8012 18.2063 14.0139 18.2063H18.9855ZM18.9855 16.7026C19.1983 16.7026 19.3706 16.532 19.3706 16.3211C19.3706 16.1102 19.198 15.9396 18.9855 15.9396H15.5881C15.3754 15.9396 15.2027 16.1105 15.2027 16.3211C15.2027 16.5317 15.3751 16.7026 15.5881 16.7026H18.9855ZM18.9855 15.1976C19.1975 15.1976 19.3696 15.0275 19.3696 14.8175C19.3696 14.6074 19.1975 14.4376 18.9855 14.4376H17.0731C16.861 14.4376 16.6894 14.6077 16.6894 14.8178C16.6894 15.0278 16.8612 15.1976 17.0731 15.1976H18.9855Z" fill="white"/>
                                        <defs>
                                        <filter id="filter0_bi_301_5888" x="-48.4302" y="-48.9038" width="128.86" height="128.86" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                                        <feFlood flood-opacity="0" result="BackgroundImageFix"/>
                                        <feGaussianBlur in="BackgroundImageFix" stdDeviation="24.4519"/>
                                        <feComposite in2="SourceAlpha" operator="in" result="effect1_backgroundBlur_301_5888"/>
                                        <feBlend mode="normal" in="SourceGraphic" in2="effect1_backgroundBlur_301_5888" result="shape"/>
                                        <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
                                        <feOffset dx="2.03766" dy="2.03766"/>
                                        <feGaussianBlur stdDeviation="1.01883"/>
                                        <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>
                                        <feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.5 0"/>
                                        <feBlend mode="normal" in2="shape" result="effect2_innerShadow_301_5888"/>
                                        </filter>
                                        </defs>
                                        </svg>
                                    </span>
                            ${match}
                        </span>`
                }
                return match
            })
        })

        setHtml(html)

        window.handleClickDescription = onClick

    }, [content])

    return (<div dangerouslySetInnerHTML={{ __html: html }}></div>);
}